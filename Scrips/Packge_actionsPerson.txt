CREATE OR REPLACE PACKAGE actionsPerson IS
PROCEDURE insertPerson (pid_person VARCHAR2, pfirst_name VARCHAR2, pmiddle_name VARCHAR2, pfirst_surname 			VARCHAR2, psecond_surname VARCHAR2, pdate_birth DATE, pdirection VARCHAR2, pemail 			VARCHAR2, pid_type NUMBER, pid_district  NUMBER, pid_photo BLOB);
PROCEDURE deletePerson(pid_person VARCHAR2);
PROCEDURE updatePerson_fname(id_person VARCHAR2, pfirst_name VARCHAR2);
PROCEDURE updatePerson_mname(id_person VARCHAR2, pmiddle_name VARCHAR2);
PROCEDURE updatePerson_fsurname(id_person VARCHAR2, pfirst_surname VARCHAR2);
PROCEDURE updatePerson_ssurname(id_person VARCHAR2, psecond_surname VARCHAR2);
PROCEDURE updatePerson_datebirth(id_person VARCHAR2, pdate_birth DATE);
PROCEDURE updatePerson_email(id_person VARCHAR2, pemail VARCHAR2);
PROCEDURE updatePerson_direct(id_person VARCHAR2, pdirection VARCHAR2);
PROCEDURE updatePerson_(id_person VARCHAR2, pid_type NUMBER);
FUNCTION getPersona(id_person VARCHAR2) RETURN SYS_REFCURSOR;

END actionsPerson;

CREATE OR REPLACE PACKAGE BODY adminSentence AS
PROCEDURE insertPerson (pid_person VARCHAR2, pfirst_name VARCHAR2, pmiddle_name VARCHAR2, pfirst_surname VARCHAR2, psecond_surname VARCHAR2, pdate_birth DATE, pdirection VARCHAR2, pemail VARCHAR2, pid_type NUMBER, pid_district  NUMBER, pid_photo BLOB)
    BEGIN
        INSERT INTO person(id_person, first_name , middle_name , first_surname, second_surname, 			date_birth , direction, email ,id_type, id_district, id_photo)
        VALUES (pid_person, pfirst_name, pmiddle_name, pfirst_surname,psecond_surname, pdate_birth, 			pdirection , pemail , pid_type, pid_district , pid_photo );
        COMMIT;
        EXCEPTION
            WHEN VALUE_ERROR THEN
                ROLLBACK;
                DBMS_OUTPUT.PUT_LINE ('Valor no soportado.Ingrese un valor correcto.');
            WHEN OTHERS THEN
                ROLLBACK;
                DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;   
    
PROCEDURE deletePerson(pid_person VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
        DELETE person
        WHERE id_person = pid_person;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un nuevo valor.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_fname(id_person VARCHAR2, pfirst_name VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET first_name = pfirst_name
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;


PROCEDURE updatePerson_mname(id_person VARCHAR2, pmiddle_name VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET middle_name = pmiddle_name
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;



PROCEDURE updatePerson_fsurname(id_person VARCHAR2, pfirst_surname VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET first_surname = pfirst_surname
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_ssurname(id_person VARCHAR2, psecond_surname VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET second_surname = psecond_surname
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_datebirth(id_person VARCHAR2, pdate_birth DATE) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET date_birth = pdate_birth
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_direct(id_person VARCHAR2, pdirection VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET direction = pdirection
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_email(id_person VARCHAR2, pemail VARCHAR2) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET email = pemail
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_type(id_person VARCHAR2, pid_type NUMBER) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET id_type = pid_type
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_(id_person VARCHAR2, pid_district NUMBER) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET id_district = pid_district
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
    END;

PROCEDURE updatePerson_(id_person VARCHAR2, pid_photo NUMBER) IS
    p_notFound EXCEPTION;
    BEGIN
	UPDATE person
    	SET id_photo = pid_photo
    	Where id_person = pid_person;
    	COMMIT;
        IF SQL%NOTFOUND THEN
            RAISE p_notFound;
        END IF;
    EXCEPTION
        WHEN p_notFound THEN
            DBMS_OUTPUT.PUT_LINE ('No se pudo encontrar a la persona con la identificacion ' || pid_person);
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
	END; 

FUNCTION getPersona(id_person VARCHAR2) RETURN SYS_REFCURSOR IS
    person_cursor SYS_REFCURSOR;
	BEGIN
        OPEN person_cursor FOR
            SELECT *
            FROM person
            WHERE id_person = NVL(pid_person, id_person);
        RETURN person_cursor;
    EXCEPTION
        WHEN VALUE_ERROR THEN
            DBMS_OUTPUT.PUT_LINE ('Valor no soportado. Ingrese un valor correcto.');
            OPEN person_cursor FOR SELECT * FROM person WHERE 1 = 2;
            RETURN person_cursor;
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE ('Ocurrió un error inesperado.');
            OPEN person_cursor FOR SELECT * FROM person WHERE 1 = 2;
            RETURN person_cursor;
    END;
END actionsPerson ;